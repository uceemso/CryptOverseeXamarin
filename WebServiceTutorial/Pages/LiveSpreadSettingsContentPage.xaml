<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:CryptOverseeMobileApp.ViewModels;assembly=CryptOverseeMobileApp"
             xmlns:views="clr-namespace:CryptOverseeMobileApp.Pages;assembly=CryptOverseeMobileApp"
             xmlns:settings="clr-namespace:CryptOverseeMobileApp.ViewModels.Settings;assembly=CryptOverseeMobileApp"
             xmlns:b="clr-namespace:Xamarin.Forms.BehaviorsPack;assembly=Xamarin.Forms.BehaviorsPack"
             xmlns:converters="clr-namespace:CryptOverseeMobileApp.Converters;assembly=CryptOverseeMobileApp"
                xmlns:onlyIn="clr-namespace:CryptOverseeMobileApp"
             x:DataType="settings:LiveSpreadSettingsViewModel"
             x:Class="CryptOverseeMobileApp.Pages.LiveSpreadSettingsContentPage"
             NavigationPage.HasNavigationBar="true"
             x:Name="LiveSpreadSettingsName">

    <!--<ContentPage.BindingContext>
        <settings:LiveSpreadSettingsViewModel/>
    </ContentPage.BindingContext>-->
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>

        <StackLayout Margin="10,10,20,20">



            <StackLayout Orientation="Horizontal" >
                <Label Margin="0,0,0,0" Text="Settings" TextColor="Black" FontSize="Title" HorizontalOptions="Center" />
                <Button Text="✖️" HeightRequest="30" WidthRequest="30" FontSize="Large" HorizontalOptions="EndAndExpand" Margin="0,0,0,0" Padding="0" 
                        BackgroundColor="Transparent" Clicked="OnDismissButtonClicked" />
            </StackLayout>

            <Label Text="Show pairs which have an arbitrage spread" TextColor="Gray" FontSize="Default" />
            <StackLayout Orientation="Horizontal">
                <Label Text="higher than" TextColor="Gray" FontSize="Default" />
                <Label Text="{Binding MinAverageSpreadRounded.Value, StringFormat='{0:F2} %'}" TextColor="Gray" FontAttributes="Bold"  />
            </StackLayout>
            <Slider Minimum="0" Maximum="5" ThumbColor="DodgerBlue" BackgroundColor="Transparent" Scale="1.5" HorizontalOptions="Center" 
                    WidthRequest="200" HeightRequest="40"
                    MaximumTrackColor="LightGray" MinimumTrackColor="DodgerBlue" Value="{Binding MinAverageSpread.Value, Mode=TwoWay}" />

            <StackLayout Orientation="Horizontal">
                <Label Text="and lower than" TextColor="Gray" FontSize="Default" />
                <Label Text="{Binding MaxAverageSpreadRounded.Value, StringFormat='{0:F2} %'}" TextColor="Gray" FontAttributes="Bold"  />
            </StackLayout>
            <Slider Minimum="0" Maximum="100" ThumbColor="DodgerBlue" BackgroundColor="Transparent" Scale="1.5" HorizontalOptions="Center" 
                    WidthRequest="200" HeightRequest="40"
                    MaximumTrackColor="LightGray" MinimumTrackColor="DodgerBlue" Value="{Binding MaxAverageSpread.Value, Mode=TwoWay}" />
            <StackLayout Orientation="Horizontal">
                <CheckBox Margin="0,-5,0,0" IsChecked="{Binding HidePairsWithWarning.Value}" Color="DodgerBlue" />
                <Label Margin="0,0,0,0" Text="Hide spreads with warnings"  />
            </StackLayout>


            <!-- Separator -->
            <BoxView HeightRequest="1" BackgroundColor="LightGray" VerticalOptions="End" Margin="0,0,0,0"/>

            <Label Text="Select Markets" FontSize="Medium" VerticalOptions="Start" HorizontalOptions="CenterAndExpand" />

            <StackLayout >
                <FlexLayout BindableLayout.ItemsSource="{Binding AvailableMarkets.ValuesForUI}"  Wrap="Wrap" >
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="2" HeightRequest="30" x:DataType="settings:Element">
                                <Frame Margin="1" Padding="10,2,10,5" CornerRadius="30" BackgroundColor="DodgerBlue" BorderColor="Transparent"  VerticalOptions="Start"
                                       IsVisible="{Binding Enabled}">
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Path=BindingContext.TapOnElement, Source={x:Reference LiveSpreadSettingsName}}"
                                                              CommandParameter="{Binding}" NumberOfTapsRequired="1" />
                                    </Frame.GestureRecognizers>
                                    <Label  Text="{Binding Name}" TextColor="Azure" FontSize="Default" HorizontalOptions="StartAndExpand"/>
                                </Frame>
                                <Frame Margin="1" Padding="10,2,10,5" CornerRadius="30" BackgroundColor="DarkGray" BorderColor="Transparent" VerticalOptions="Start"
                                       IsVisible="{Binding Enabled, Converter={StaticResource InverseBoolConverter}}">
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Path=BindingContext.TapOnElement, Source={x:Reference LiveSpreadSettingsName}}"
                                                              CommandParameter="{Binding}" NumberOfTapsRequired="1" />
                                    </Frame.GestureRecognizers>
                                    <Label  Text="{Binding Name}" TextColor="Azure" FontSize="Default" HorizontalOptions="StartAndExpand"/>
                                </Frame>
                            </Grid>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
            </StackLayout>

            <!-- Separator -->
            <BoxView HeightRequest="1" BackgroundColor="LightGray" VerticalOptions="End" Margin="0,5,0,5"/>

            <Label Text="Select Exchanges" FontSize="Medium" VerticalOptions="Start" HorizontalOptions="CenterAndExpand" />

            <StackLayout >
                <FlexLayout BindableLayout.ItemsSource="{Binding AvailableExchanges.ValuesForUI}"  Wrap="Wrap" >
                    <BindableLayout.ItemTemplate>
                        <DataTemplate >
                            <Grid Margin="2" HeightRequest="30" x:DataType="settings:Element">
                                <Frame Margin="1" Padding="10,2,10,5" CornerRadius="30" BackgroundColor="DodgerBlue" BorderColor="Transparent"  VerticalOptions="Start" 
                                       IsVisible="{Binding Enabled}">
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Path=BindingContext.TapOnExchangeElement, Source={x:Reference LiveSpreadSettingsName}}"
                                                              CommandParameter="{Binding}" NumberOfTapsRequired="1" />
                                    </Frame.GestureRecognizers>
                                    <Label  Text="{Binding Name}" TextColor="Azure" FontSize="Default" HorizontalOptions="StartAndExpand"/>
                                </Frame>
                                <Frame Margin="1" Padding="10,2,10,5" CornerRadius="30" BackgroundColor="DarkGray" BorderColor="Transparent" VerticalOptions="Start"
                                       IsVisible="{Binding Enabled, Converter={StaticResource InverseBoolConverter}}">
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Path=BindingContext.TapOnExchangeElement, Source={x:Reference LiveSpreadSettingsName}}"
                                                              CommandParameter="{Binding}" NumberOfTapsRequired="1" />
                                    </Frame.GestureRecognizers>
                                    <Label  Text="{Binding Name}" TextColor="Azure" FontSize="Default" HorizontalOptions="StartAndExpand"/>
                                </Frame>
                            </Grid>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
            </StackLayout>

            <Button  Text="☆ GET PREMIUM SUBSCRIPTION ☆ &#x0a; To unlock all exchanges"  TextTransform="None" Command="{Binding PurchaseCommand}" TextColor="FloralWhite" BackgroundColor="Goldenrod" 
                     Margin="0,10,0,0" IsVisible="{Binding PremiumMembership.Value, Converter={StaticResource InverseBoolConverter}}"/>

            <Label  Text="☆  You are a Premium Member !  ☆"  IsVisible="{Binding PremiumMembership.Value}"  Margin="0,10,0,0"
                    TextColor="FloralWhite" BackgroundColor="Goldenrod" HeightRequest="50" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

            <!--<onlyIn:DebugBuild >-->
                <StackLayout Orientation="Vertical" VerticalOptions="End" IsVisible="{Binding DebugMode.Value}">
                    <Label Text="Debug tools" FontSize="Medium" VerticalOptions="Start" HorizontalOptions="CenterAndExpand" />
                    <StackLayout Orientation="Horizontal">
                        <Button  Text="Check purchases" HeightRequest="40" Command="{Binding CheckPurchasesCommand}"/>
                        <Button  Text="Buy" HeightRequest="40" Command="{Binding PurchaseCommand}"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Label Margin="0,0,0,0" Text="Premium membership: "  />
                        <Label Margin="0,0,0,0" Text="{Binding PremiumMembership.Value}" TextColor="Black"  />
                        <Label Margin="0,0,0,0" Text="Debug mode: "  />
                        <Label Margin="0,0,0,0" Text="{Binding DebugMode.Value}" TextColor="Black"  />
                    </StackLayout>                    
                    <StackLayout Orientation="Horizontal">
                        <Label Margin="0,0,0,0" Text="Ignore cap on max spread "  />
                        <CheckBox IsChecked="{Binding IgnoreCap.Value}" />
                    </StackLayout>
            </StackLayout>

            <!--</onlyIn:DebugBuild>-->

            <StackLayout.GestureRecognizers>
                <SwipeGestureRecognizer Direction="Down" Swiped="OnDismissButtonClicked"/>
            </StackLayout.GestureRecognizers>
        </StackLayout>

    </ContentPage.Content>
</ContentPage>